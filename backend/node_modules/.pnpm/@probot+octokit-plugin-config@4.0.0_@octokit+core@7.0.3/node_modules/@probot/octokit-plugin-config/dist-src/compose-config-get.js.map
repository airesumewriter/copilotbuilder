{
  "version": 3,
  "sources": ["../../src/compose-config-get.ts"],
  "sourcesContent": ["import type { Octokit } from \"@octokit/core\";\nimport type { Configuration, GetOptions, GetResult } from \"./types.js\";\nimport { getConfigFiles } from \"./util/get-config-files.js\";\n\n/**\n * Loads configuration from one or multiple files and resolves with\n * the combined configuration as well as the list of files the configuration\n * was loaded from\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function composeConfigGet<T extends Configuration = Configuration>(\n  octokit: Octokit,\n  { owner, repo, defaults, path, branch }: GetOptions<T>,\n): Promise<GetResult<T>> {\n  const files = await getConfigFiles(octokit, {\n    owner,\n    repo,\n    path,\n    branch,\n  });\n\n  const configs = files\n    .map((file) => file.config)\n    .reverse()\n    .filter(Boolean) as Configuration[];\n\n  return {\n    files,\n    config:\n      typeof defaults === \"function\"\n        ? defaults(configs)\n        : Object.assign({}, defaults, ...configs),\n  };\n}\n"],
  "mappings": "AAEA,SAAS,sBAAsB;AAU/B,eAAsB,iBACpB,SACA,EAAE,OAAO,MAAM,UAAU,MAAM,OAAO,GACf;AACvB,QAAM,QAAQ,MAAM,eAAe,SAAS;AAAA,IAC1C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,UAAU,MACb,IAAI,CAAC,SAAS,KAAK,MAAM,EACzB,QAAQ,EACR,OAAO,OAAO;AAEjB,SAAO;AAAA,IACL;AAAA,IACA,QACE,OAAO,aAAa,aAChB,SAAS,OAAO,IAChB,OAAO,OAAO,CAAC,GAAG,UAAU,GAAG,OAAO;AAAA,EAC9C;AACF;",
  "names": []
}
