{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import type { Octokit } from \"@octokit/core\";\nimport type * as Types from \"./types.js\";\nexport type * from \"./types.js\";\nimport { VERSION } from \"./version.js\";\nimport { composeConfigGet } from \"./compose-config-get.js\";\n\n/**\n * @param octokit Octokit instance\n */\nexport function config(octokit: Octokit): Types.API {\n  return {\n    config: {\n      async get(options) {\n        return composeConfigGet(octokit, options);\n      },\n    },\n  };\n}\n\nconfig.VERSION = VERSION;\n\nexport { composeConfigGet } from \"./compose-config-get.js\";\n\nexport namespace createPullRequest {\n  export type GetOptions<T extends Types.Configuration = Types.Configuration> =\n    Types.GetOptions<T>;\n  export type GetResult<T extends Types.Configuration = Types.Configuration> =\n    Types.GetResult<T>;\n  export type ConfigFile = Types.ConfigFile;\n}\n"],
  "mappings": "AAGA,SAAS,eAAe;AACxB,SAAS,wBAAwB;AAK1B,SAAS,OAAO,SAA6B;AAClD,SAAO;AAAA,IACL,QAAQ;AAAA,MACN,MAAM,IAAI,SAAS;AACjB,eAAO,iBAAiB,SAAS,OAAO;AAAA,MAC1C;AAAA,IACF;AAAA,EACF;AACF;AAEA,OAAO,UAAU;AAEjB,SAAS,oBAAAA,yBAAwB;",
  "names": ["composeConfigGet"]
}
