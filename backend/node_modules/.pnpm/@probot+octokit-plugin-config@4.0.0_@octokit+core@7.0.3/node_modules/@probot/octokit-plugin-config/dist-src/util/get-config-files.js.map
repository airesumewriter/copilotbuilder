{
  "version": 3,
  "sources": ["../../../src/util/get-config-files.ts"],
  "sourcesContent": ["import type { Octokit } from \"@octokit/core\";\nimport type { ConfigFile } from \"../types.js\";\nimport { getConfigFile } from \"./get-config-file.js\";\nimport { extendsToGetContentParams } from \"./extends-to-get-content-params.js\";\n\ntype Options = {\n  owner: string;\n  repo: string;\n  path: string;\n  branch?: string | undefined;\n};\n\n/**\n * Load configuration from selected repository file. If the file does not exist\n * it loads configuration from the owners `.github` repository.\n *\n * If the repository file configuration includes an `_extends` key, that file\n * is loaded. Same with the target file until no `_extends` key is present.\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function getConfigFiles(\n  octokit: Octokit,\n  { owner, repo, path, branch }: Options,\n): Promise<ConfigFile[]> {\n  const requestedRepoFile = await getConfigFile(octokit, {\n    owner,\n    repo,\n    path,\n    ref: branch,\n  });\n\n  const files = [requestedRepoFile];\n\n  // if no configuration file present in selected repository,\n  // try to load it from the `.github` repository\n  if (!requestedRepoFile.config) {\n    if (repo === \".github\") {\n      return files;\n    }\n\n    const defaultRepoConfig = await getConfigFile(octokit, {\n      owner,\n      repo: \".github\",\n      path,\n    });\n\n    files.push(defaultRepoConfig);\n  }\n\n  const file = files[files.length - 1];\n\n  // if the configuration has no `_extends` key, we are done here.\n  if (!file.config || !file.config._extends) {\n    return files;\n  }\n\n  // parse the value of `_extends` into request parameters to\n  // retrieve the new configuration file\n  let extendConfigOptions = extendsToGetContentParams({\n    owner,\n    path,\n    url: file.url,\n    extendsValue: file.config._extends as string,\n  });\n\n  // remove the `_extends` key from the configuration that is returned\n  delete file.config._extends;\n\n  // now load the configuration linked from the `_extends` key. If that\n  // configuration also includes an `_extends` key, then load that configuration\n  // as well, until the target configuration has no `_extends` key\n  do {\n    const extendRepoConfig = await getConfigFile(octokit, extendConfigOptions);\n    files.push(extendRepoConfig);\n    if (!extendRepoConfig.config || !extendRepoConfig.config._extends) {\n      return files;\n    }\n\n    extendConfigOptions = extendsToGetContentParams({\n      owner,\n      path,\n      url: extendRepoConfig.url,\n      extendsValue: extendRepoConfig.config._extends as string,\n    });\n    delete extendRepoConfig.config._extends;\n\n    // Avoid loops\n    const alreadyLoaded = files.find(\n      (file) =>\n        file.owner === extendConfigOptions.owner &&\n        file.repo === extendConfigOptions.repo &&\n        file.path === extendConfigOptions.path,\n    );\n\n    if (alreadyLoaded) {\n      throw new Error(\n        `[@probot/octokit-plugin-config] Recursion detected. Ignoring  \"_extends: ${extendRepoConfig.config._extends}\" from ${extendRepoConfig.url} because ${alreadyLoaded.url} was already loaded.`,\n      );\n    }\n  } while (true);\n}\n"],
  "mappings": "AAEA,SAAS,qBAAqB;AAC9B,SAAS,iCAAiC;AAmB1C,eAAsB,eACpB,SACA,EAAE,OAAO,MAAM,MAAM,OAAO,GACL;AACvB,QAAM,oBAAoB,MAAM,cAAc,SAAS;AAAA,IACrD;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,EACP,CAAC;AAED,QAAM,QAAQ,CAAC,iBAAiB;AAIhC,MAAI,CAAC,kBAAkB,QAAQ;AAC7B,QAAI,SAAS,WAAW;AACtB,aAAO;AAAA,IACT;AAEA,UAAM,oBAAoB,MAAM,cAAc,SAAS;AAAA,MACrD;AAAA,MACA,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AAED,UAAM,KAAK,iBAAiB;AAAA,EAC9B;AAEA,QAAM,OAAO,MAAM,MAAM,SAAS,CAAC;AAGnC,MAAI,CAAC,KAAK,UAAU,CAAC,KAAK,OAAO,UAAU;AACzC,WAAO;AAAA,EACT;AAIA,MAAI,sBAAsB,0BAA0B;AAAA,IAClD;AAAA,IACA;AAAA,IACA,KAAK,KAAK;AAAA,IACV,cAAc,KAAK,OAAO;AAAA,EAC5B,CAAC;AAGD,SAAO,KAAK,OAAO;AAKnB,KAAG;AACD,UAAM,mBAAmB,MAAM,cAAc,SAAS,mBAAmB;AACzE,UAAM,KAAK,gBAAgB;AAC3B,QAAI,CAAC,iBAAiB,UAAU,CAAC,iBAAiB,OAAO,UAAU;AACjE,aAAO;AAAA,IACT;AAEA,0BAAsB,0BAA0B;AAAA,MAC9C;AAAA,MACA;AAAA,MACA,KAAK,iBAAiB;AAAA,MACtB,cAAc,iBAAiB,OAAO;AAAA,IACxC,CAAC;AACD,WAAO,iBAAiB,OAAO;AAG/B,UAAM,gBAAgB,MAAM;AAAA,MAC1B,CAACA,UACCA,MAAK,UAAU,oBAAoB,SACnCA,MAAK,SAAS,oBAAoB,QAClCA,MAAK,SAAS,oBAAoB;AAAA,IACtC;AAEA,QAAI,eAAe;AACjB,YAAM,IAAI;AAAA,QACR,4EAA4E,iBAAiB,OAAO,QAAQ,UAAU,iBAAiB,GAAG,YAAY,cAAc,GAAG;AAAA,MACzK;AAAA,IACF;AAAA,EACF,SAAS;AACX;",
  "names": ["file"]
}
